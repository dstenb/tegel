/*! \page tegel_types Types
  \tableofcontents

  \section predefined Predefined types

  \subsection primitive Primitives

  \subsubsection bool bool

  Method             | Description
  -------------      | -------------
  `string b.str()`   | Returns a string representation of `b`

  \subsubsection int int

  Method                  | Description
  -------------           | -------------
  `int[] i.downto(int d)` | Returns a list of ints going from `i` down to `u`
  `string i.str()`        | Returns a string representation of `i`
  `int[] i.upto(int u)`   | Returns a list of ints going from `i` up to `u`

  \subsubsection string string

  Method             | Description
  -------------      | -------------
  `int s.length()`   | Returns the length of `s`
  `string s.lower()` | Returns a lower case version of `s`
  `string s.title()` | Returns a title case version of `s`
  `string s.upper()` | Returns a upper case version of `s`

  \subsection list List of primitives

  \subsubsection bool_list bool[]

  Method             | Description
  -------------      | -------------
  `int b.size()`     | Returns the size of the list

  \subsubsection int_list int[]

  Method                   | Description
  -------------            | -------------
  `int i.size()`           | Returns the size of the list
  `int[] i.sort(bool asc)` | Returns a sorted version of `i`. Sorted ascending if `asc` is true, else descending.

  \subsubsection string_list string[]

  Method                        | Description
  -------------                 | -------------
  `string s.join(string del)`   | Returns a string containing all elements in `s`delimited by `del`
  `int s.size()`                | Returns the size of the list
  `string[] s.sort(bool asc)`   | Returns a sorted version of `s`. Sorted ascending if `asc` is true, else descending.

  \subsection records Records

  A record is a collection of primitive data types. Custom records can be
  defined in the header of a .tgl file (see TODO).

  \subsubsection record_lists List of records

  A list of records of type `rec` can simply be defined as `rec[]`. A `rec[]`
  variable called `r` has the following methods defined

  Method                                | Description
  -------------                         | -------------
  `int r.size()`                        | Returns the size of the list
  `rec[] r.sort(string field, bool asc)`| Returns a sorted version of `r`, sorted by the `field` field. Sorted ascending if `asc` is true, else descending.

*/
